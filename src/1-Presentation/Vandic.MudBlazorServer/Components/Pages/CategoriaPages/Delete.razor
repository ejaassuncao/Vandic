@* @page "/categorias/delete"
@using Microsoft.EntityFrameworkCore
@using Vandic.Domain.Models
@inject IDbContextFactory<Vandic.Infra.Data.Context.AppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Categoria</h2>
    <hr />
    @if (categoria is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@categoria.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">InternalId</dt>
            <dd class="col-sm-10">@categoria.InternalId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Excluido</dt>
            <dd class="col-sm-10">@categoria.Excluido</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CriadoPor</dt>
            <dd class="col-sm-10">@categoria.CriadoPor</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AlteradoPor</dt>
            <dd class="col-sm-10">@categoria.AlteradoPor</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ExcluidoPor</dt>
            <dd class="col-sm-10">@categoria.ExcluidoPor</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DataInclusao</dt>
            <dd class="col-sm-10">@categoria.DataInclusao</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DataAlteracao</dt>
            <dd class="col-sm-10">@categoria.DataAlteracao</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DataExclusao</dt>
            <dd class="col-sm-10">@categoria.DataExclusao</dd>
        </dl>
        <EditForm method="post" Model="categoria" OnValidSubmit="DeleteCategoria" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(categoria is null)">Delete</button> |
            <a href="/categoria">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Categoria? categoria;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        categoria = await context.Categorias.FirstOrDefaultAsync(m => m.Id == Id);

        if (categoria is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteCategoria()
    {
        using var context = DbFactory.CreateDbContext();
        context.Categorias.Remove(categoria!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/categoria");
    }
}
 *@