@page "/categorias/visualizar"


<PageTitle>Details</PageTitle>

<h1>Details</h1>
@*
    @using Microsoft.EntityFrameworkCore
@using Vandic.Domain.Models
@inject IDbContextFactory<Vandic.Infra.Data.Context.AppDbContext> DbFactory
@inject NavigationManager NavigationManager
<div>
    <h2>Categoria</h2>
    <hr />
    @if (categoria is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@categoria.Name</dd>
            <dt class="col-sm-2">InternalId</dt>
            <dd class="col-sm-10">@categoria.InternalId</dd>
            <dt class="col-sm-2">Excluido</dt>
            <dd class="col-sm-10">@categoria.Excluido</dd>
            <dt class="col-sm-2">CriadoPor</dt>
            <dd class="col-sm-10">@categoria.CriadoPor</dd>
            <dt class="col-sm-2">AlteradoPor</dt>
            <dd class="col-sm-10">@categoria.AlteradoPor</dd>
            <dt class="col-sm-2">ExcluidoPor</dt>
            <dd class="col-sm-10">@categoria.ExcluidoPor</dd>
            <dt class="col-sm-2">DataInclusao</dt>
            <dd class="col-sm-10">@categoria.DataInclusao</dd>
            <dt class="col-sm-2">DataAlteracao</dt>
            <dd class="col-sm-10">@categoria.DataAlteracao</dd>
            <dt class="col-sm-2">DataExclusao</dt>
            <dd class="col-sm-10">@categoria.DataExclusao</dd>
        </dl>
        <div>
            <a href="@($"/categoria/edit?id={categoria.Id}")">Edit</a> |
            <a href="@($"/categoria")">Back to List</a>
        </div>
    }
</div>

@code {
    private Categoria? categoria;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        categoria = await context.Categorias.FirstOrDefaultAsync(m => m.Id == Id);

        if (categoria is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
 *@